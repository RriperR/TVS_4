services:
  db:
    image: postgres:16
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      retries: 5
      timeout: 3s


  web:
    build:
      context: .
    entrypoint: ["/entrypoint.sh", "uwsgi", "--ini", "./config/uwsgi/uwsgi.ini"]
    restart: always

    environment:
      - DJANGO_SETTINGS_MODULE=docere.prod
      - PYTHONPATH=/code
      - SEED_DEMO=true
      - DEMO_DOCTORS=5
      - DEMO_PASSWORD=demo12345
    env_file:
      - .env

    depends_on:
      db:
        condition: service_healthy
      #- redis
    volumes:
      - uwsgi_socket:/tmp
      - static_volume:/code/docere/static
      - media_volume:/code/docere/media
      - .:/code/

    ports:
      - "8000:8000"


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - react_build:/react/dist
    depends_on:
      - web


  nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx:/etc/nginx/templates
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - uwsgi_socket:/tmp
      - ./logs/nginx:/var/log/nginx
      - static_volume:/code/docere/static
      - media_volume:/code/docere/media
      - react_build:/var/www/react
    depends_on:
      - web
    restart: always

  redis:
    image: redis
    hostname: redis


  worker: # надо пересобирать при изменениях в коде для celery
    build:
      context: .
    hostname: worker
    environment:
      - DJANGO_SETTINGS_MODULE=docere.prod
      - PYTHONPATH=/code/docere
    env_file:
      - .env

    command: celery -A docere.celery worker --loglevel=info
    volumes:
      - media_volume:/code/docere/media
      - .:/code/
    links:
      - redis
    depends_on:
      - redis

  zap:
    image: ghcr.io/zaproxy/zaproxy:stable
    command: >
      zap-baseline.py
      -t http://nginx:80
      -r zap_report.html
      -J zap_report.json
    depends_on:
      - nginx
    volumes:
      - ./reports/dynamic/baseline:/zap/wrk
    working_dir: /zap/wrk


volumes:
  code_volume:
  pgdata:
  uwsgi_socket:
  static_volume:
  media_volume:
  react_build: